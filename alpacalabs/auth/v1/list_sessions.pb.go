// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alpacalabs/auth/v1/list_sessions.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request to list your sessions.
type ListMySessionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMySessionsRequest) Reset()         { *m = ListMySessionsRequest{} }
func (m *ListMySessionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListMySessionsRequest) ProtoMessage()    {}
func (*ListMySessionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa76c49238593944, []int{0}
}

func (m *ListMySessionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMySessionsRequest.Unmarshal(m, b)
}
func (m *ListMySessionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMySessionsRequest.Marshal(b, m, deterministic)
}
func (m *ListMySessionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMySessionsRequest.Merge(m, src)
}
func (m *ListMySessionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListMySessionsRequest.Size(m)
}
func (m *ListMySessionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMySessionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMySessionsRequest proto.InternalMessageInfo

// Response containing a list of your sessions.
type ListMySessionsResponse struct {
	// list of sessions
	Sessions             []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListMySessionsResponse) Reset()         { *m = ListMySessionsResponse{} }
func (m *ListMySessionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListMySessionsResponse) ProtoMessage()    {}
func (*ListMySessionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa76c49238593944, []int{1}
}

func (m *ListMySessionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMySessionsResponse.Unmarshal(m, b)
}
func (m *ListMySessionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMySessionsResponse.Marshal(b, m, deterministic)
}
func (m *ListMySessionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMySessionsResponse.Merge(m, src)
}
func (m *ListMySessionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListMySessionsResponse.Size(m)
}
func (m *ListMySessionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMySessionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMySessionsResponse proto.InternalMessageInfo

func (m *ListMySessionsResponse) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

// Request to list sessions for a particular account.
type ListSessionsForAccountRequest struct {
	// the account
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSessionsForAccountRequest) Reset()         { *m = ListSessionsForAccountRequest{} }
func (m *ListSessionsForAccountRequest) String() string { return proto.CompactTextString(m) }
func (*ListSessionsForAccountRequest) ProtoMessage()    {}
func (*ListSessionsForAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa76c49238593944, []int{2}
}

func (m *ListSessionsForAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSessionsForAccountRequest.Unmarshal(m, b)
}
func (m *ListSessionsForAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSessionsForAccountRequest.Marshal(b, m, deterministic)
}
func (m *ListSessionsForAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSessionsForAccountRequest.Merge(m, src)
}
func (m *ListSessionsForAccountRequest) XXX_Size() int {
	return xxx_messageInfo_ListSessionsForAccountRequest.Size(m)
}
func (m *ListSessionsForAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSessionsForAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSessionsForAccountRequest proto.InternalMessageInfo

func (m *ListSessionsForAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

// Response containing a particular account's sessions.
type ListSessionsForAccountResponse struct {
	// list of sessions
	Sessions             []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListSessionsForAccountResponse) Reset()         { *m = ListSessionsForAccountResponse{} }
func (m *ListSessionsForAccountResponse) String() string { return proto.CompactTextString(m) }
func (*ListSessionsForAccountResponse) ProtoMessage()    {}
func (*ListSessionsForAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa76c49238593944, []int{3}
}

func (m *ListSessionsForAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSessionsForAccountResponse.Unmarshal(m, b)
}
func (m *ListSessionsForAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSessionsForAccountResponse.Marshal(b, m, deterministic)
}
func (m *ListSessionsForAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSessionsForAccountResponse.Merge(m, src)
}
func (m *ListSessionsForAccountResponse) XXX_Size() int {
	return xxx_messageInfo_ListSessionsForAccountResponse.Size(m)
}
func (m *ListSessionsForAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSessionsForAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSessionsForAccountResponse proto.InternalMessageInfo

func (m *ListSessionsForAccountResponse) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func init() {
	proto.RegisterType((*ListMySessionsRequest)(nil), "alpacalabs.auth.v1.ListMySessionsRequest")
	proto.RegisterType((*ListMySessionsResponse)(nil), "alpacalabs.auth.v1.ListMySessionsResponse")
	proto.RegisterType((*ListSessionsForAccountRequest)(nil), "alpacalabs.auth.v1.ListSessionsForAccountRequest")
	proto.RegisterType((*ListSessionsForAccountResponse)(nil), "alpacalabs.auth.v1.ListSessionsForAccountResponse")
}

func init() {
	proto.RegisterFile("alpacalabs/auth/v1/list_sessions.proto", fileDescriptor_fa76c49238593944)
}

var fileDescriptor_fa76c49238593944 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4b, 0xcc, 0x29, 0x48,
	0x4c, 0x4e, 0xcc, 0x49, 0x4c, 0x2a, 0xd6, 0x4f, 0x2c, 0x2d, 0xc9, 0xd0, 0x2f, 0x33, 0xd4, 0xcf,
	0xc9, 0x2c, 0x2e, 0x89, 0x2f, 0x4e, 0x2d, 0x2e, 0xce, 0xcc, 0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x42, 0xa8, 0xd3, 0x03, 0xa9, 0xd3, 0x2b, 0x33, 0x94, 0x52, 0xc0, 0xa2,
	0x17, 0xaa, 0x0d, 0xa2, 0x4b, 0x49, 0x9c, 0x4b, 0xd4, 0x27, 0xb3, 0xb8, 0xc4, 0xb7, 0x32, 0x18,
	0x6a, 0x5a, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x52, 0x20, 0x97, 0x18, 0xba, 0x44, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x39, 0x17, 0x07, 0xcc, 0x6a, 0x09, 0x46, 0x05, 0x66, 0x0d,
	0x6e, 0x23, 0x69, 0x3d, 0x4c, 0xbb, 0xf5, 0xa0, 0xfa, 0x82, 0xe0, 0x8a, 0x95, 0xec, 0xb8, 0x64,
	0x41, 0x46, 0xc2, 0x0c, 0x74, 0xcb, 0x2f, 0x72, 0x4c, 0x4e, 0xce, 0x2f, 0xcd, 0x2b, 0x81, 0xda,
	0x29, 0x24, 0xcb, 0xc5, 0x95, 0x08, 0x11, 0x89, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x0c, 0xe2, 0x84, 0x8a, 0x78, 0xa6, 0x28, 0x45, 0x72, 0xc9, 0xe1, 0xd2, 0x4f, 0xa1, 0xd3, 0x8c,
	0x5a, 0x98, 0xb8, 0x84, 0x91, 0xcd, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xca, 0xe4,
	0xe2, 0x43, 0x0d, 0x05, 0x21, 0x4d, 0x6c, 0x06, 0x62, 0x0d, 0x42, 0x29, 0x2d, 0x62, 0x94, 0x42,
	0x5c, 0xae, 0xc4, 0x20, 0xd4, 0xc8, 0x08, 0x09, 0x71, 0x4c, 0xef, 0x09, 0x19, 0xe2, 0x32, 0x08,
	0x67, 0x50, 0x4a, 0x19, 0x91, 0xa2, 0x05, 0xe6, 0x06, 0xa7, 0x89, 0x8c, 0x5c, 0x62, 0xc9, 0xf9,
	0xb9, 0x58, 0xf4, 0x3a, 0x71, 0x3a, 0x96, 0x96, 0x64, 0x04, 0x80, 0xd2, 0x4c, 0x00, 0x63, 0x94,
	0x55, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0xbe, 0x23, 0x58, 0xad, 0x0f,
	0x28, 0x89, 0x81, 0x93, 0x54, 0x51, 0x6a, 0x41, 0xbe, 0x2e, 0x48, 0x97, 0x6e, 0x7a, 0xbe, 0x3e,
	0x66, 0xfa, 0x5b, 0xc4, 0xc4, 0xec, 0xe8, 0xe3, 0xb8, 0x8a, 0x49, 0x08, 0xa1, 0x4f, 0x0f, 0x64,
	0xb4, 0x5e, 0x98, 0xe1, 0x29, 0x64, 0xc1, 0x18, 0x90, 0x60, 0x4c, 0x98, 0x61, 0x12, 0x1b, 0xd8,
	0x54, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x29, 0x3e, 0x39, 0xf4, 0x08, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ListSessionsServiceClient is the client API for ListSessionsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ListSessionsServiceClient interface {
	// List your sessions.
	ListMySessions(ctx context.Context, in *ListMySessionsRequest, opts ...grpc.CallOption) (*ListMySessionsResponse, error)
	// List sessions for account.
	ListSessionsForAccount(ctx context.Context, in *ListSessionsForAccountRequest, opts ...grpc.CallOption) (*ListSessionsForAccountResponse, error)
}

type listSessionsServiceClient struct {
	cc *grpc.ClientConn
}

func NewListSessionsServiceClient(cc *grpc.ClientConn) ListSessionsServiceClient {
	return &listSessionsServiceClient{cc}
}

func (c *listSessionsServiceClient) ListMySessions(ctx context.Context, in *ListMySessionsRequest, opts ...grpc.CallOption) (*ListMySessionsResponse, error) {
	out := new(ListMySessionsResponse)
	err := c.cc.Invoke(ctx, "/alpacalabs.auth.v1.ListSessionsService/ListMySessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listSessionsServiceClient) ListSessionsForAccount(ctx context.Context, in *ListSessionsForAccountRequest, opts ...grpc.CallOption) (*ListSessionsForAccountResponse, error) {
	out := new(ListSessionsForAccountResponse)
	err := c.cc.Invoke(ctx, "/alpacalabs.auth.v1.ListSessionsService/ListSessionsForAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ListSessionsServiceServer is the server API for ListSessionsService service.
type ListSessionsServiceServer interface {
	// List your sessions.
	ListMySessions(context.Context, *ListMySessionsRequest) (*ListMySessionsResponse, error)
	// List sessions for account.
	ListSessionsForAccount(context.Context, *ListSessionsForAccountRequest) (*ListSessionsForAccountResponse, error)
}

func RegisterListSessionsServiceServer(s *grpc.Server, srv ListSessionsServiceServer) {
	s.RegisterService(&_ListSessionsService_serviceDesc, srv)
}

func _ListSessionsService_ListMySessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMySessionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListSessionsServiceServer).ListMySessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alpacalabs.auth.v1.ListSessionsService/ListMySessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListSessionsServiceServer).ListMySessions(ctx, req.(*ListMySessionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ListSessionsService_ListSessionsForAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSessionsForAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListSessionsServiceServer).ListSessionsForAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alpacalabs.auth.v1.ListSessionsService/ListSessionsForAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListSessionsServiceServer).ListSessionsForAccount(ctx, req.(*ListSessionsForAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ListSessionsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "alpacalabs.auth.v1.ListSessionsService",
	HandlerType: (*ListSessionsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMySessions",
			Handler:    _ListSessionsService_ListMySessions_Handler,
		},
		{
			MethodName: "ListSessionsForAccount",
			Handler:    _ListSessionsService_ListSessionsForAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alpacalabs/auth/v1/list_sessions.proto",
}
