// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alpacalabs/auth/v1/mfa.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MFACode struct {
	// primary key
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// a randomly generated code
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// when the code was generated
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// when the code will expire
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// if true, this code cannot be used. When a user uses a code,
	// all previously issued codes are rendered stale.
	Stale bool `protobuf:"varint,5,opt,name=stale,proto3" json:"stale,omitempty"`
	// indicates whether a code has been used. Once used, a code becomes stale.
	Used bool `protobuf:"varint,6,opt,name=used,proto3" json:"used,omitempty"`
	// the account to which this code belongs
	AccountId            string   `protobuf:"bytes,7,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MFACode) Reset()         { *m = MFACode{} }
func (m *MFACode) String() string { return proto.CompactTextString(m) }
func (*MFACode) ProtoMessage()    {}
func (*MFACode) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6996ae23be59e2b, []int{0}
}

func (m *MFACode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MFACode.Unmarshal(m, b)
}
func (m *MFACode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MFACode.Marshal(b, m, deterministic)
}
func (m *MFACode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MFACode.Merge(m, src)
}
func (m *MFACode) XXX_Size() int {
	return xxx_messageInfo_MFACode.Size(m)
}
func (m *MFACode) XXX_DiscardUnknown() {
	xxx_messageInfo_MFACode.DiscardUnknown(m)
}

var xxx_messageInfo_MFACode proto.InternalMessageInfo

func (m *MFACode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MFACode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *MFACode) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *MFACode) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *MFACode) GetStale() bool {
	if m != nil {
		return m.Stale
	}
	return false
}

func (m *MFACode) GetUsed() bool {
	if m != nil {
		return m.Used
	}
	return false
}

func (m *MFACode) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type SendMFACodeRequest struct {
	ResetCode            string   `protobuf:"bytes,1,opt,name=reset_code,json=resetCode,proto3" json:"reset_code,omitempty"`
	AccountId            string   `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMFACodeRequest) Reset()         { *m = SendMFACodeRequest{} }
func (m *SendMFACodeRequest) String() string { return proto.CompactTextString(m) }
func (*SendMFACodeRequest) ProtoMessage()    {}
func (*SendMFACodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6996ae23be59e2b, []int{1}
}

func (m *SendMFACodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMFACodeRequest.Unmarshal(m, b)
}
func (m *SendMFACodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMFACodeRequest.Marshal(b, m, deterministic)
}
func (m *SendMFACodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMFACodeRequest.Merge(m, src)
}
func (m *SendMFACodeRequest) XXX_Size() int {
	return xxx_messageInfo_SendMFACodeRequest.Size(m)
}
func (m *SendMFACodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMFACodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMFACodeRequest proto.InternalMessageInfo

func (m *SendMFACodeRequest) GetResetCode() string {
	if m != nil {
		return m.ResetCode
	}
	return ""
}

func (m *SendMFACodeRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type SendMFACodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMFACodeResponse) Reset()         { *m = SendMFACodeResponse{} }
func (m *SendMFACodeResponse) String() string { return proto.CompactTextString(m) }
func (*SendMFACodeResponse) ProtoMessage()    {}
func (*SendMFACodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6996ae23be59e2b, []int{2}
}

func (m *SendMFACodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMFACodeResponse.Unmarshal(m, b)
}
func (m *SendMFACodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMFACodeResponse.Marshal(b, m, deterministic)
}
func (m *SendMFACodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMFACodeResponse.Merge(m, src)
}
func (m *SendMFACodeResponse) XXX_Size() int {
	return xxx_messageInfo_SendMFACodeResponse.Size(m)
}
func (m *SendMFACodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMFACodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendMFACodeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MFACode)(nil), "alpacalabs.auth.v1.MFACode")
	proto.RegisterType((*SendMFACodeRequest)(nil), "alpacalabs.auth.v1.SendMFACodeRequest")
	proto.RegisterType((*SendMFACodeResponse)(nil), "alpacalabs.auth.v1.SendMFACodeResponse")
}

func init() { proto.RegisterFile("alpacalabs/auth/v1/mfa.proto", fileDescriptor_b6996ae23be59e2b) }

var fileDescriptor_b6996ae23be59e2b = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x8a, 0xdb, 0x30,
	0x14, 0xae, 0x9d, 0xbf, 0x5a, 0x81, 0x2e, 0xd4, 0x1f, 0x4c, 0x68, 0x69, 0xc8, 0xa2, 0xcd, 0x26,
	0x32, 0x4e, 0x57, 0xed, 0xce, 0x29, 0x14, 0x0a, 0x29, 0x04, 0xa7, 0x64, 0x51, 0x02, 0xa9, 0x2c,
	0xbd, 0x38, 0x06, 0x3b, 0x72, 0x2d, 0xd9, 0xf4, 0x1a, 0x73, 0x85, 0x59, 0xce, 0x51, 0xe6, 0x2c,
	0x73, 0x88, 0x41, 0xb2, 0x43, 0x92, 0xc9, 0x40, 0x76, 0xd2, 0xa7, 0xef, 0xe7, 0xe9, 0xbd, 0x87,
	0xde, 0xd3, 0x34, 0xa7, 0x8c, 0xa6, 0x34, 0x92, 0x1e, 0x2d, 0xd5, 0xce, 0xab, 0x7c, 0x2f, 0xdb,
	0x52, 0x92, 0x17, 0x42, 0x09, 0x8c, 0x8f, 0xaf, 0x44, 0xbf, 0x92, 0xca, 0x1f, 0x7c, 0x8c, 0x85,
	0x88, 0x53, 0xf0, 0x0c, 0x23, 0x2a, 0xb7, 0x9e, 0x4a, 0x32, 0x90, 0x8a, 0x66, 0x79, 0x2d, 0x1a,
	0x3d, 0x58, 0xa8, 0xf7, 0xeb, 0x47, 0xf0, 0x5d, 0x70, 0xc0, 0xaf, 0x90, 0x9d, 0x70, 0xd7, 0x1a,
	0x5a, 0x63, 0x27, 0xb4, 0x13, 0x8e, 0x31, 0x6a, 0x33, 0xc1, 0xc1, 0xb5, 0x0d, 0x62, 0xce, 0xf8,
	0x2b, 0x42, 0xac, 0x00, 0xaa, 0x80, 0x6f, 0xa8, 0x72, 0x5b, 0x43, 0x6b, 0xdc, 0x9f, 0x0e, 0x48,
	0x9d, 0x42, 0x0e, 0x29, 0xe4, 0xf7, 0x21, 0x25, 0x74, 0x1a, 0x76, 0xa0, 0xb4, 0x14, 0xfe, 0xe7,
	0x49, 0x01, 0x52, 0x4b, 0xdb, 0xd7, 0xa5, 0x0d, 0x3b, 0x50, 0xf8, 0x0d, 0xea, 0x48, 0x45, 0x53,
	0x70, 0x3b, 0x43, 0x6b, 0xfc, 0x32, 0xac, 0x2f, 0xba, 0xbe, 0x52, 0x02, 0x77, 0xbb, 0x06, 0x34,
	0x67, 0xfc, 0x01, 0x21, 0xca, 0x98, 0x28, 0xf7, 0x6a, 0x93, 0x70, 0xb7, 0x67, 0x2a, 0x77, 0x1a,
	0xe4, 0x27, 0x1f, 0x85, 0x08, 0x2f, 0x61, 0xcf, 0x9b, 0x1f, 0x87, 0xf0, 0xaf, 0x04, 0xa9, 0xb4,
	0xa8, 0x00, 0x09, 0x6a, 0x63, 0xbe, 0x5b, 0x37, 0xc0, 0x31, 0x88, 0xe9, 0xcb, 0xb9, 0xa7, 0xfd,
	0xd4, 0xf3, 0x2d, 0x7a, 0x7d, 0xe6, 0x29, 0x73, 0xb1, 0x97, 0x30, 0xad, 0xce, 0xa2, 0x96, 0x50,
	0x54, 0x09, 0x03, 0xfc, 0x17, 0xf5, 0x4f, 0x50, 0xfc, 0x89, 0x5c, 0x0e, 0x8d, 0x5c, 0x56, 0x38,
	0xf8, 0x7c, 0x95, 0x57, 0xa7, 0x8e, 0x5e, 0xcc, 0x6e, 0x2c, 0xf4, 0x8e, 0x89, 0xec, 0x19, 0xc1,
	0xcc, 0x09, 0x4a, 0xb5, 0x5b, 0xe8, 0x4e, 0x2f, 0xac, 0x3f, 0xdf, 0xe2, 0x44, 0xed, 0xca, 0x88,
	0x30, 0x91, 0x79, 0x81, 0xe1, 0xce, 0xf5, 0x5e, 0x99, 0x41, 0x14, 0x90, 0x8b, 0x89, 0x56, 0x4d,
	0x62, 0xe1, 0x5d, 0x2e, 0xdd, 0xad, 0xdd, 0x0a, 0xe6, 0xc1, 0x9d, 0x8d, 0x8f, 0x3a, 0xa2, 0xad,
	0xc9, 0xca, 0xbf, 0x3f, 0x05, 0xd7, 0x1a, 0x5c, 0xaf, 0xfc, 0xa8, 0x6b, 0x5c, 0xbf, 0x3c, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xad, 0xb7, 0x5d, 0x5b, 0xc1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SendMFACodeServiceClient is the client API for SendMFACodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendMFACodeServiceClient interface {
	SendMFACode(ctx context.Context, in *SendMFACodeRequest, opts ...grpc.CallOption) (*SendMFACodeResponse, error)
}

type sendMFACodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewSendMFACodeServiceClient(cc *grpc.ClientConn) SendMFACodeServiceClient {
	return &sendMFACodeServiceClient{cc}
}

func (c *sendMFACodeServiceClient) SendMFACode(ctx context.Context, in *SendMFACodeRequest, opts ...grpc.CallOption) (*SendMFACodeResponse, error) {
	out := new(SendMFACodeResponse)
	err := c.cc.Invoke(ctx, "/alpacalabs.auth.v1.SendMFACodeService/SendMFACode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SendMFACodeServiceServer is the server API for SendMFACodeService service.
type SendMFACodeServiceServer interface {
	SendMFACode(context.Context, *SendMFACodeRequest) (*SendMFACodeResponse, error)
}

func RegisterSendMFACodeServiceServer(s *grpc.Server, srv SendMFACodeServiceServer) {
	s.RegisterService(&_SendMFACodeService_serviceDesc, srv)
}

func _SendMFACodeService_SendMFACode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMFACodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendMFACodeServiceServer).SendMFACode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alpacalabs.auth.v1.SendMFACodeService/SendMFACode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendMFACodeServiceServer).SendMFACode(ctx, req.(*SendMFACodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SendMFACodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "alpacalabs.auth.v1.SendMFACodeService",
	HandlerType: (*SendMFACodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMFACode",
			Handler:    _SendMFACodeService_SendMFACode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alpacalabs/auth/v1/mfa.proto",
}
