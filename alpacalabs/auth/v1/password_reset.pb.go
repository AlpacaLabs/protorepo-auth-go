// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alpacalabs/auth/v1/password_reset.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PasswordResetCode struct {
	// a randomly generated reset code
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// indicates whether a password reset code has been used. Used codes are necessarily unusable.
	Used bool `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	// indicates whether this password reset code can be used. When a user uses a reset code,
	// all previously issued codes are rendered unusable.
	Usable bool `protobuf:"varint,3,opt,name=usable,proto3" json:"usable,omitempty"`
	// when the reset code expires
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// the account to which this code belongs
	AccountId            string   `protobuf:"bytes,5,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordResetCode) Reset()         { *m = PasswordResetCode{} }
func (m *PasswordResetCode) String() string { return proto.CompactTextString(m) }
func (*PasswordResetCode) ProtoMessage()    {}
func (*PasswordResetCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_793b66ac1a4c5cd8, []int{0}
}

func (m *PasswordResetCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PasswordResetCode.Unmarshal(m, b)
}
func (m *PasswordResetCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PasswordResetCode.Marshal(b, m, deterministic)
}
func (m *PasswordResetCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordResetCode.Merge(m, src)
}
func (m *PasswordResetCode) XXX_Size() int {
	return xxx_messageInfo_PasswordResetCode.Size(m)
}
func (m *PasswordResetCode) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordResetCode.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordResetCode proto.InternalMessageInfo

func (m *PasswordResetCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PasswordResetCode) GetUsed() bool {
	if m != nil {
		return m.Used
	}
	return false
}

func (m *PasswordResetCode) GetUsable() bool {
	if m != nil {
		return m.Usable
	}
	return false
}

func (m *PasswordResetCode) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *PasswordResetCode) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func init() {
	proto.RegisterType((*PasswordResetCode)(nil), "alpacalabs.auth.v1.PasswordResetCode")
}

func init() {
	proto.RegisterFile("alpacalabs/auth/v1/password_reset.proto", fileDescriptor_793b66ac1a4c5cd8)
}

var fileDescriptor_793b66ac1a4c5cd8 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0x33, 0x31,
	0x14, 0x85, 0x49, 0xdb, 0xbf, 0xfc, 0x13, 0x57, 0x66, 0x51, 0x86, 0x82, 0x58, 0xdc, 0xd8, 0x4d,
	0x13, 0x46, 0x57, 0xba, 0x9b, 0xba, 0x12, 0xba, 0x28, 0x83, 0x74, 0x21, 0x85, 0x21, 0x93, 0xc4,
	0x99, 0x81, 0x19, 0x6f, 0x98, 0x24, 0xd5, 0xd7, 0xf0, 0x15, 0x5c, 0x0a, 0xbe, 0x88, 0x4f, 0x25,
	0x49, 0xa7, 0x54, 0xe8, 0xee, 0xe6, 0x70, 0xce, 0x97, 0x73, 0x2f, 0xbe, 0xe6, 0x8d, 0xe6, 0x82,
	0x37, 0xbc, 0x30, 0x8c, 0x3b, 0x5b, 0xb1, 0x5d, 0xc2, 0x34, 0x37, 0xe6, 0x0d, 0x3a, 0x99, 0x77,
	0xca, 0x28, 0x4b, 0x75, 0x07, 0x16, 0x08, 0x39, 0x1a, 0xa9, 0x37, 0xd2, 0x5d, 0x32, 0xbd, 0x2c,
	0x01, 0xca, 0x46, 0xb1, 0xe0, 0x28, 0xdc, 0x0b, 0xb3, 0x75, 0xab, 0x8c, 0xe5, 0xad, 0xde, 0x87,
	0xae, 0xbe, 0x11, 0x3e, 0x5f, 0xf7, 0xb4, 0xcc, 0xc3, 0x1e, 0x40, 0x2a, 0x42, 0xf0, 0x48, 0x80,
	0x54, 0x31, 0x9a, 0xa1, 0x79, 0x94, 0x85, 0xd9, 0x6b, 0xce, 0x28, 0x19, 0x0f, 0x66, 0x68, 0xfe,
	0x3f, 0x0b, 0x33, 0x99, 0xe0, 0xb1, 0x33, 0xbc, 0x68, 0x54, 0x3c, 0x0c, 0x6a, 0xff, 0x22, 0x77,
	0x18, 0xab, 0x77, 0x5d, 0x77, 0xca, 0xe4, 0xdc, 0xc6, 0xa3, 0x19, 0x9a, 0x9f, 0xdd, 0x4c, 0xe9,
	0xbe, 0x0b, 0x3d, 0x74, 0xa1, 0x4f, 0x87, 0x2e, 0x59, 0xd4, 0xbb, 0x53, 0x4b, 0x2e, 0x30, 0xe6,
	0x42, 0x80, 0x7b, 0xb5, 0x79, 0x2d, 0xe3, 0x7f, 0xa1, 0x40, 0xd4, 0x2b, 0x8f, 0x72, 0xf9, 0x81,
	0xf0, 0x44, 0x40, 0x4b, 0x4f, 0x77, 0x5d, 0x46, 0xa9, 0xb3, 0xd5, 0xda, 0xc3, 0xd7, 0xe8, 0xf9,
	0xbe, 0xac, 0x6d, 0xe5, 0x0a, 0x2a, 0xa0, 0x65, 0x69, 0xf0, 0xae, 0xfc, 0x01, 0xc3, 0xdf, 0x9d,
	0xd2, 0xb0, 0xf0, 0xa9, 0x45, 0x09, 0xec, 0xf4, 0xba, 0x9f, 0x83, 0x61, 0xba, 0x4a, 0xbf, 0x06,
	0xe4, 0x98, 0xa3, 0x1e, 0x4d, 0x37, 0xc9, 0xcf, 0x5f, 0x71, 0xeb, 0xc5, 0xed, 0x26, 0x29, 0xc6,
	0x81, 0x7a, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xbe, 0x4b, 0x41, 0xaa, 0x01, 0x00, 0x00,
}
